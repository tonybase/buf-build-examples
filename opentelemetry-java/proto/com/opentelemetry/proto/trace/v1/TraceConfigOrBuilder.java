// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/trace/v1/trace_config.proto

package com.opentelemetry.proto.trace.v1;

public interface TraceConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opentelemetry.proto.trace.v1.TraceConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.opentelemetry.proto.trace.v1.ConstantSampler constant_sampler = 1 [json_name = "constantSampler"];</code>
   * @return Whether the constantSampler field is set.
   */
  boolean hasConstantSampler();
  /**
   * <code>.opentelemetry.proto.trace.v1.ConstantSampler constant_sampler = 1 [json_name = "constantSampler"];</code>
   * @return The constantSampler.
   */
  com.opentelemetry.proto.trace.v1.ConstantSampler getConstantSampler();
  /**
   * <code>.opentelemetry.proto.trace.v1.ConstantSampler constant_sampler = 1 [json_name = "constantSampler"];</code>
   */
  com.opentelemetry.proto.trace.v1.ConstantSamplerOrBuilder getConstantSamplerOrBuilder();

  /**
   * <code>.opentelemetry.proto.trace.v1.TraceIdRatioBased trace_id_ratio_based = 2 [json_name = "traceIdRatioBased"];</code>
   * @return Whether the traceIdRatioBased field is set.
   */
  boolean hasTraceIdRatioBased();
  /**
   * <code>.opentelemetry.proto.trace.v1.TraceIdRatioBased trace_id_ratio_based = 2 [json_name = "traceIdRatioBased"];</code>
   * @return The traceIdRatioBased.
   */
  com.opentelemetry.proto.trace.v1.TraceIdRatioBased getTraceIdRatioBased();
  /**
   * <code>.opentelemetry.proto.trace.v1.TraceIdRatioBased trace_id_ratio_based = 2 [json_name = "traceIdRatioBased"];</code>
   */
  com.opentelemetry.proto.trace.v1.TraceIdRatioBasedOrBuilder getTraceIdRatioBasedOrBuilder();

  /**
   * <code>.opentelemetry.proto.trace.v1.RateLimitingSampler rate_limiting_sampler = 3 [json_name = "rateLimitingSampler"];</code>
   * @return Whether the rateLimitingSampler field is set.
   */
  boolean hasRateLimitingSampler();
  /**
   * <code>.opentelemetry.proto.trace.v1.RateLimitingSampler rate_limiting_sampler = 3 [json_name = "rateLimitingSampler"];</code>
   * @return The rateLimitingSampler.
   */
  com.opentelemetry.proto.trace.v1.RateLimitingSampler getRateLimitingSampler();
  /**
   * <code>.opentelemetry.proto.trace.v1.RateLimitingSampler rate_limiting_sampler = 3 [json_name = "rateLimitingSampler"];</code>
   */
  com.opentelemetry.proto.trace.v1.RateLimitingSamplerOrBuilder getRateLimitingSamplerOrBuilder();

  /**
   * <pre>
   * The global default max number of attributes per span.
   * </pre>
   *
   * <code>int64 max_number_of_attributes = 4 [json_name = "maxNumberOfAttributes"];</code>
   * @return The maxNumberOfAttributes.
   */
  long getMaxNumberOfAttributes();

  /**
   * <pre>
   * The global default max number of annotation events per span.
   * </pre>
   *
   * <code>int64 max_number_of_timed_events = 5 [json_name = "maxNumberOfTimedEvents"];</code>
   * @return The maxNumberOfTimedEvents.
   */
  long getMaxNumberOfTimedEvents();

  /**
   * <pre>
   * The global default max number of attributes per timed event.
   * </pre>
   *
   * <code>int64 max_number_of_attributes_per_timed_event = 6 [json_name = "maxNumberOfAttributesPerTimedEvent"];</code>
   * @return The maxNumberOfAttributesPerTimedEvent.
   */
  long getMaxNumberOfAttributesPerTimedEvent();

  /**
   * <pre>
   * The global default max number of link entries per span.
   * </pre>
   *
   * <code>int64 max_number_of_links = 7 [json_name = "maxNumberOfLinks"];</code>
   * @return The maxNumberOfLinks.
   */
  long getMaxNumberOfLinks();

  /**
   * <pre>
   * The global default max number of attributes per span.
   * </pre>
   *
   * <code>int64 max_number_of_attributes_per_link = 8 [json_name = "maxNumberOfAttributesPerLink"];</code>
   * @return The maxNumberOfAttributesPerLink.
   */
  long getMaxNumberOfAttributesPerLink();

  public com.opentelemetry.proto.trace.v1.TraceConfig.SamplerCase getSamplerCase();
}
