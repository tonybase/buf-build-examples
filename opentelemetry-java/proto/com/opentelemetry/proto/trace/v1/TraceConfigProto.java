// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/trace/v1/trace_config.proto

package com.opentelemetry.proto.trace.v1;

public final class TraceConfigProto {
  private TraceConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_TraceConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_ConstantSampler_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/opentelemetry/proto/trace/v1/trace_con" +
      "fig.proto\022\034opentelemetry.proto.trace.v1\"" +
      "\204\005\n\013TraceConfig\022Z\n\020constant_sampler\030\001 \001(" +
      "\0132-.opentelemetry.proto.trace.v1.Constan" +
      "tSamplerH\000R\017constantSampler\022b\n\024trace_id_" +
      "ratio_based\030\002 \001(\0132/.opentelemetry.proto." +
      "trace.v1.TraceIdRatioBasedH\000R\021traceIdRat" +
      "ioBased\022g\n\025rate_limiting_sampler\030\003 \001(\01321" +
      ".opentelemetry.proto.trace.v1.RateLimiti" +
      "ngSamplerH\000R\023rateLimitingSampler\0227\n\030max_" +
      "number_of_attributes\030\004 \001(\003R\025maxNumberOfA" +
      "ttributes\022:\n\032max_number_of_timed_events\030" +
      "\005 \001(\003R\026maxNumberOfTimedEvents\022T\n(max_num" +
      "ber_of_attributes_per_timed_event\030\006 \001(\003R" +
      "\"maxNumberOfAttributesPerTimedEvent\022-\n\023m" +
      "ax_number_of_links\030\007 \001(\003R\020maxNumberOfLin" +
      "ks\022G\n!max_number_of_attributes_per_link\030" +
      "\010 \001(\003R\034maxNumberOfAttributesPerLinkB\t\n\007s" +
      "ampler\"\263\001\n\017ConstantSampler\022Z\n\010decision\030\001" +
      " \001(\0162>.opentelemetry.proto.trace.v1.Cons" +
      "tantSampler.ConstantDecisionR\010decision\"D" +
      "\n\020ConstantDecision\022\016\n\nALWAYS_OFF\020\000\022\r\n\tAL" +
      "WAYS_ON\020\001\022\021\n\rALWAYS_PARENT\020\002\"9\n\021TraceIdR" +
      "atioBased\022$\n\rsamplingRatio\030\001 \001(\001R\rsampli" +
      "ngRatio\"\'\n\023RateLimitingSampler\022\020\n\003qps\030\001 " +
      "\001(\003R\003qpsB\372\001\n com.opentelemetry.proto.tra" +
      "ce.v1B\020TraceConfigProtoP\001Z1go.openteleme" +
      "try.io/proto/otlp/collector/trace/v1\242\002\003O" +
      "PT\252\002\034Opentelemetry.Proto.Trace.V1\312\002\034Open" +
      "telemetry\\Proto\\Trace\\V1\342\002(Opentelemetry" +
      "\\Proto\\Trace\\V1\\GPBMetadata\352\002\037Openteleme" +
      "try::Proto::Trace::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opentelemetry_proto_trace_v1_TraceConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor,
        new java.lang.String[] { "ConstantSampler", "TraceIdRatioBased", "RateLimitingSampler", "MaxNumberOfAttributes", "MaxNumberOfTimedEvents", "MaxNumberOfAttributesPerTimedEvent", "MaxNumberOfLinks", "MaxNumberOfAttributesPerLink", "Sampler", });
    internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opentelemetry_proto_trace_v1_ConstantSampler_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor,
        new java.lang.String[] { "Decision", });
    internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor,
        new java.lang.String[] { "SamplingRatio", });
    internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor,
        new java.lang.String[] { "Qps", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
