// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/trace/v1/trace.proto

package com.opentelemetry.proto.trace.v1;

public final class TraceProto {
  private TraceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_TracesData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_ResourceSpans_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_ScopeSpans_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_InstrumentationLibrarySpans_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_InstrumentationLibrarySpans_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_Event_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_Link_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Status_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(opentelemetry/proto/trace/v1/trace.pro" +
      "to\022\034opentelemetry.proto.trace.v1\032*opente" +
      "lemetry/proto/common/v1/common.proto\032.op" +
      "entelemetry/proto/resource/v1/resource.p" +
      "roto\"`\n\nTracesData\022R\n\016resource_spans\030\001 \003" +
      "(\0132+.opentelemetry.proto.trace.v1.Resour" +
      "ceSpansR\rresourceSpans\"\305\002\n\rResourceSpans" +
      "\022E\n\010resource\030\001 \001(\0132).opentelemetry.proto" +
      ".resource.v1.ResourceR\010resource\022I\n\013scope" +
      "_spans\030\002 \003(\0132(.opentelemetry.proto.trace" +
      ".v1.ScopeSpansR\nscopeSpans\022\202\001\n\035instrumen" +
      "tation_library_spans\030\350\007 \003(\01329.openteleme" +
      "try.proto.trace.v1.InstrumentationLibrar" +
      "ySpansB\002\030\001R\033instrumentationLibrarySpans\022" +
      "\035\n\nschema_url\030\003 \001(\tR\tschemaUrl\"\260\001\n\nScope" +
      "Spans\022I\n\005scope\030\001 \001(\01323.opentelemetry.pro" +
      "to.common.v1.InstrumentationScopeR\005scope" +
      "\0228\n\005spans\030\002 \003(\0132\".opentelemetry.proto.tr" +
      "ace.v1.SpanR\005spans\022\035\n\nschema_url\030\003 \001(\tR\t" +
      "schemaUrl\"\352\001\n\033InstrumentationLibrarySpan" +
      "s\022n\n\027instrumentation_library\030\001 \001(\01325.ope" +
      "ntelemetry.proto.common.v1.Instrumentati" +
      "onLibraryR\026instrumentationLibrary\0228\n\005spa" +
      "ns\030\002 \003(\0132\".opentelemetry.proto.trace.v1." +
      "SpanR\005spans\022\035\n\nschema_url\030\003 \001(\tR\tschemaU" +
      "rl:\002\030\001\"\234\n\n\004Span\022\031\n\010trace_id\030\001 \001(\014R\007trace" +
      "Id\022\027\n\007span_id\030\002 \001(\014R\006spanId\022\037\n\013trace_sta" +
      "te\030\003 \001(\tR\ntraceState\022$\n\016parent_span_id\030\004" +
      " \001(\014R\014parentSpanId\022\022\n\004name\030\005 \001(\tR\004name\022?" +
      "\n\004kind\030\006 \001(\0162+.opentelemetry.proto.trace" +
      ".v1.Span.SpanKindR\004kind\022/\n\024start_time_un" +
      "ix_nano\030\007 \001(\006R\021startTimeUnixNano\022+\n\022end_" +
      "time_unix_nano\030\010 \001(\006R\017endTimeUnixNano\022G\n" +
      "\nattributes\030\t \003(\0132\'.opentelemetry.proto." +
      "common.v1.KeyValueR\nattributes\0228\n\030droppe" +
      "d_attributes_count\030\n \001(\rR\026droppedAttribu" +
      "tesCount\022@\n\006events\030\013 \003(\0132(.opentelemetry" +
      ".proto.trace.v1.Span.EventR\006events\0220\n\024dr" +
      "opped_events_count\030\014 \001(\rR\022droppedEventsC" +
      "ount\022=\n\005links\030\r \003(\0132\'.opentelemetry.prot" +
      "o.trace.v1.Span.LinkR\005links\022.\n\023dropped_l" +
      "inks_count\030\016 \001(\rR\021droppedLinksCount\022<\n\006s" +
      "tatus\030\017 \001(\0132$.opentelemetry.proto.trace." +
      "v1.StatusR\006status\032\304\001\n\005Event\022$\n\016time_unix" +
      "_nano\030\001 \001(\006R\014timeUnixNano\022\022\n\004name\030\002 \001(\tR" +
      "\004name\022G\n\nattributes\030\003 \003(\0132\'.opentelemetr" +
      "y.proto.common.v1.KeyValueR\nattributes\0228" +
      "\n\030dropped_attributes_count\030\004 \001(\rR\026droppe" +
      "dAttributesCount\032\336\001\n\004Link\022\031\n\010trace_id\030\001 " +
      "\001(\014R\007traceId\022\027\n\007span_id\030\002 \001(\014R\006spanId\022\037\n" +
      "\013trace_state\030\003 \001(\tR\ntraceState\022G\n\nattrib" +
      "utes\030\004 \003(\0132\'.opentelemetry.proto.common." +
      "v1.KeyValueR\nattributes\0228\n\030dropped_attri" +
      "butes_count\030\005 \001(\rR\026droppedAttributesCoun" +
      "t\"\231\001\n\010SpanKind\022\031\n\025SPAN_KIND_UNSPECIFIED\020" +
      "\000\022\026\n\022SPAN_KIND_INTERNAL\020\001\022\024\n\020SPAN_KIND_S" +
      "ERVER\020\002\022\024\n\020SPAN_KIND_CLIENT\020\003\022\026\n\022SPAN_KI" +
      "ND_PRODUCER\020\004\022\026\n\022SPAN_KIND_CONSUMER\020\005\"\275\001" +
      "\n\006Status\022\030\n\007message\030\002 \001(\tR\007message\022C\n\004co" +
      "de\030\003 \001(\0162/.opentelemetry.proto.trace.v1." +
      "Status.StatusCodeR\004code\"N\n\nStatusCode\022\025\n" +
      "\021STATUS_CODE_UNSET\020\000\022\022\n\016STATUS_CODE_OK\020\001" +
      "\022\025\n\021STATUS_CODE_ERROR\020\002J\004\010\001\020\002B\352\001\n com.op" +
      "entelemetry.proto.trace.v1B\nTraceProtoP\001" +
      "Z\'go.opentelemetry.io/proto/otlp/trace/v" +
      "1\242\002\003OPT\252\002\034Opentelemetry.Proto.Trace.V1\312\002" +
      "\034Opentelemetry\\Proto\\Trace\\V1\342\002(Opentele" +
      "metry\\Proto\\Trace\\V1\\GPBMetadata\352\002\037Opent" +
      "elemetry::Proto::Trace::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.opentelemetry.proto.common.v1.CommonProto.getDescriptor(),
          com.opentelemetry.proto.resource.v1.ResourceProto.getDescriptor(),
        });
    internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opentelemetry_proto_trace_v1_TracesData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor,
        new java.lang.String[] { "ResourceSpans", });
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor,
        new java.lang.String[] { "Resource", "ScopeSpans", "InstrumentationLibrarySpans", "SchemaUrl", });
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor,
        new java.lang.String[] { "Scope", "Spans", "SchemaUrl", });
    internal_static_opentelemetry_proto_trace_v1_InstrumentationLibrarySpans_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_opentelemetry_proto_trace_v1_InstrumentationLibrarySpans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_InstrumentationLibrarySpans_descriptor,
        new java.lang.String[] { "InstrumentationLibrary", "Spans", "SchemaUrl", });
    internal_static_opentelemetry_proto_trace_v1_Span_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_opentelemetry_proto_trace_v1_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_descriptor,
        new java.lang.String[] { "TraceId", "SpanId", "TraceState", "ParentSpanId", "Name", "Kind", "StartTimeUnixNano", "EndTimeUnixNano", "Attributes", "DroppedAttributesCount", "Events", "DroppedEventsCount", "Links", "DroppedLinksCount", "Status", });
    internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor =
      internal_static_opentelemetry_proto_trace_v1_Span_descriptor.getNestedTypes().get(0);
    internal_static_opentelemetry_proto_trace_v1_Span_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor,
        new java.lang.String[] { "TimeUnixNano", "Name", "Attributes", "DroppedAttributesCount", });
    internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor =
      internal_static_opentelemetry_proto_trace_v1_Span_descriptor.getNestedTypes().get(1);
    internal_static_opentelemetry_proto_trace_v1_Span_Link_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor,
        new java.lang.String[] { "TraceId", "SpanId", "TraceState", "Attributes", "DroppedAttributesCount", });
    internal_static_opentelemetry_proto_trace_v1_Status_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Status_descriptor,
        new java.lang.String[] { "Message", "Code", });
    com.opentelemetry.proto.common.v1.CommonProto.getDescriptor();
    com.opentelemetry.proto.resource.v1.ResourceProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
